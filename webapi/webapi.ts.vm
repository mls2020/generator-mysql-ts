
// Express Server
import * as express from 'express';
import {Client} from './db';
import * as I from './interfaces';


export const applyRoutes = (app: express.Application,cli:Client) => {
     #foreach($table in $tables)
        app.get('/api/v${major}/${table.name}',(req,res)=>{
            res.header("Content-Type", "application/json");
            let errors:string[]=[];
            if (errors.length >0) {
                res.status(999);
                res.send(JSON.stringify(errors));
            } else {
            cli.${table.name}List(req.query)
                .then (result =>{
                    res.send(JSON.stringify(result));
                }).catch(err=> {
                    res.status(500);
                    res.send(JSON.stringify(err));
                });
            }
        });

        app.get('/api/v${major}/${table.name}/:id',(req,res)=>{
            res.header("Content-Type", "application/json");
            let errors:string[]=[];
            if (errors.length >0) {
                res.status(999);
                res.send(JSON.stringify(errors));
            } else {
            cli.${table.name}Get(req.params.id as any)
                .then (result =>{
                    res.send(JSON.stringify(result));
                }).catch(err=> {
                    res.status(500);
                    res.send(JSON.stringify(err));
                });
            }
        });

        app.post('/api/v${major}/${table.name}',(req,res)=>{
            res.header("Content-Type", "application/json");
            let errors:string[]=[];
            if (errors.length >0) {
                res.status(999);
                res.send(JSON.stringify(errors));
            } else {
            console.log('body',JSON.stringify(req.body));
            cli.${table.name}Insert(req.body)
                .then (result =>{
                    res.send(JSON.stringify(result));
                }).catch(err=> {
                    res.status(500);
                    res.send(JSON.stringify(err));
                });
            }
        });
        app.put('/api/v${major}/${table.name}/:id',(req,res)=>{
            res.header("Content-Type", "application/json");
            let errors:string[]=[];
            if (errors.length >0) {
                res.status(999);
                res.send(JSON.stringify(errors));
            } else {
            cli.${table.name}Update(req.params.id as any,req.body )
                .then (result =>{
                    res.send(JSON.stringify(result));
                }).catch(err=> {
                    res.status(500);
                    res.send(JSON.stringify(err));
                });
            }
        });
        app.delete('/api/v${major}/${table.name}/:id',(req,res)=>{
            res.header("Content-Type", "application/json");
            let errors:string[]=[];
            if (errors.length >0) {
                res.status(999);
                res.send(JSON.stringify(errors));
            } else {
            cli.${table.name}Delete(req.params.id as any)
                .then (result =>{
                    res.send(JSON.stringify(result));
                }).catch(err=> {
                    res.status(500);
                    res.send(JSON.stringify(err));
                });
            }
        });
    #end

    #foreach($proc in $procedures)
        app.post('/api/v${major}/action/${proc.name}',(req,res)=>{
            res.header("Content-Type", "application/json");
            let errors:string[]=[];
            #foreach($parm in ${proc.mandatoryParameters})
            if (req.body.${parm.name}==undefined) {
                errors.push(`parameter ${parm.name} is missing`);
            }
            #end

            if (errors.length >0) {
                res.status(999);
                res.send(JSON.stringify(errors));
            } else {
            cli.${proc.name}(req.body)
                .then (result =>{
                    res.send(JSON.stringify(result));
                }).catch(err=> {
                    res.status(500);
                    res.send(JSON.stringify(err));
                });
            }
        });
    #end
}

