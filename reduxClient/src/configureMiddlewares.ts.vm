import { Middleware, applyMiddleware} from 'redux';
import checkedPromise, { CheckedPromiseMiddlewareOptions } from 'redux-helper';
import thunk from 'redux-thunk';
import {startLoading, endLoading, showError} from './actions';

function configureCheckedPromiseMiddleware() {
    const cpmOptions: CheckedPromiseMiddlewareOptions = {
        onStart: startLoading,
        onEnd: endLoading as any,
        onError: (msg: string | Error | any[]) => {
            return showError(JSON.stringify(msg));
        }
    };
    return cpmOptions;
}

const configureAll = (): Middleware[] => {
    const configuredCpm = checkedPromise(configureCheckedPromiseMiddleware());
    const middlewares = [configuredCpm, thunk];

    return middlewares;
};

export default applyMiddleware(...configureAll());